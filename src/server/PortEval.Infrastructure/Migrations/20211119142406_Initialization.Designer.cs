// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortEval.Infrastructure;

namespace PortEval.Infrastructure.Migrations
{
    [DbContext(typeof(PortEvalDbContext))]
    [Migration("20211119142406_Initialization")]
    partial class Initialization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Chart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Charts");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.ChartLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChartId")
                        .HasColumnType("int");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("Dash")
                        .HasColumnType("int");

                    b.Property<string>("Line_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChartId");

                    b.ToTable("ChartLines");

                    b.HasDiscriminator<string>("Line_Type").HasValue("ChartLine");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Currency", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Code");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Code = "AED",
                            IsDefault = false,
                            Name = "UAE dirham",
                            Symbol = "د.إ;"
                        },
                        new
                        {
                            Code = "AFN",
                            IsDefault = false,
                            Name = "Afghan afghani",
                            Symbol = "Afs"
                        },
                        new
                        {
                            Code = "ALL",
                            IsDefault = false,
                            Name = "Albanian lek",
                            Symbol = "L"
                        },
                        new
                        {
                            Code = "AMD",
                            IsDefault = false,
                            Name = "Armenian dram",
                            Symbol = "AMD"
                        },
                        new
                        {
                            Code = "ANG",
                            IsDefault = false,
                            Name = "Netherlands Antillean gulden",
                            Symbol = "NAƒ"
                        },
                        new
                        {
                            Code = "AOA",
                            IsDefault = false,
                            Name = "Angolan kwanza",
                            Symbol = "Kz"
                        },
                        new
                        {
                            Code = "ARS",
                            IsDefault = false,
                            Name = "Argentine peso",
                            Symbol = "$"
                        },
                        new
                        {
                            Code = "AUD",
                            IsDefault = false,
                            Name = "Australian dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            Code = "AWG",
                            IsDefault = false,
                            Name = "Aruban florin",
                            Symbol = "ƒ"
                        },
                        new
                        {
                            Code = "AZN",
                            IsDefault = false,
                            Name = "Azerbaijani manat",
                            Symbol = "AZN"
                        },
                        new
                        {
                            Code = "BAM",
                            IsDefault = false,
                            Name = "Bosnia and Herzegovina konvertibilna marka",
                            Symbol = "KM"
                        },
                        new
                        {
                            Code = "BBD",
                            IsDefault = false,
                            Name = "Barbadian dollar",
                            Symbol = "Bds$"
                        },
                        new
                        {
                            Code = "BDT",
                            IsDefault = false,
                            Name = "Bangladeshi taka",
                            Symbol = "৳"
                        },
                        new
                        {
                            Code = "BGN",
                            IsDefault = false,
                            Name = "Bulgarian lev",
                            Symbol = "BGN"
                        },
                        new
                        {
                            Code = "BHD",
                            IsDefault = false,
                            Name = "Bahraini dinar",
                            Symbol = ".د.ب"
                        },
                        new
                        {
                            Code = "BIF",
                            IsDefault = false,
                            Name = "Burundi franc",
                            Symbol = "FBu"
                        },
                        new
                        {
                            Code = "BMD",
                            IsDefault = false,
                            Name = "Bermudian dollar",
                            Symbol = "BD$"
                        },
                        new
                        {
                            Code = "BND",
                            IsDefault = false,
                            Name = "Brunei dollar",
                            Symbol = "B$"
                        },
                        new
                        {
                            Code = "BOB",
                            IsDefault = false,
                            Name = "Bolivian boliviano",
                            Symbol = "Bs."
                        },
                        new
                        {
                            Code = "BRL",
                            IsDefault = false,
                            Name = "Brazilian real",
                            Symbol = "R$"
                        },
                        new
                        {
                            Code = "BSD",
                            IsDefault = false,
                            Name = "Bahamian dollar",
                            Symbol = "B$"
                        },
                        new
                        {
                            Code = "BTN",
                            IsDefault = false,
                            Name = "Bhutanese ngultrum",
                            Symbol = "Nu."
                        },
                        new
                        {
                            Code = "BWP",
                            IsDefault = false,
                            Name = "Botswana pula",
                            Symbol = "P"
                        },
                        new
                        {
                            Code = "BYR",
                            IsDefault = false,
                            Name = "Belarusian ruble",
                            Symbol = "Br"
                        },
                        new
                        {
                            Code = "BZD",
                            IsDefault = false,
                            Name = "Belize dollar",
                            Symbol = "BZ$"
                        },
                        new
                        {
                            Code = "CAD",
                            IsDefault = false,
                            Name = "Canadian dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            Code = "CDF",
                            IsDefault = false,
                            Name = "Congolese franc",
                            Symbol = "F"
                        },
                        new
                        {
                            Code = "CHF",
                            IsDefault = false,
                            Name = "Swiss franc",
                            Symbol = "Fr."
                        },
                        new
                        {
                            Code = "CLP",
                            IsDefault = false,
                            Name = "Chilean peso",
                            Symbol = "$"
                        },
                        new
                        {
                            Code = "CNY",
                            IsDefault = false,
                            Name = "Chinese/Yuan renminbi",
                            Symbol = "¥"
                        },
                        new
                        {
                            Code = "COP",
                            IsDefault = false,
                            Name = "Colombian peso",
                            Symbol = "Col$"
                        },
                        new
                        {
                            Code = "CRC",
                            IsDefault = false,
                            Name = "Costa Rican colon",
                            Symbol = "₡"
                        },
                        new
                        {
                            Code = "CUC",
                            IsDefault = false,
                            Name = "Cuban peso",
                            Symbol = "$"
                        },
                        new
                        {
                            Code = "CVE",
                            IsDefault = false,
                            Name = "Cape Verdean escudo",
                            Symbol = "Esc"
                        },
                        new
                        {
                            Code = "CZK",
                            IsDefault = false,
                            Name = "Czech koruna",
                            Symbol = "Kč"
                        },
                        new
                        {
                            Code = "DJF",
                            IsDefault = false,
                            Name = "Djiboutian franc",
                            Symbol = "Fdj"
                        },
                        new
                        {
                            Code = "DKK",
                            IsDefault = false,
                            Name = "Danish krone",
                            Symbol = "Kr"
                        },
                        new
                        {
                            Code = "DOP",
                            IsDefault = false,
                            Name = "Dominican peso",
                            Symbol = "RD$"
                        },
                        new
                        {
                            Code = "DZD",
                            IsDefault = false,
                            Name = "Algerian dinar",
                            Symbol = "د.ج"
                        },
                        new
                        {
                            Code = "EEK",
                            IsDefault = false,
                            Name = "Estonian kroon",
                            Symbol = "KR"
                        },
                        new
                        {
                            Code = "EGP",
                            IsDefault = false,
                            Name = "Egyptian pound",
                            Symbol = "£"
                        },
                        new
                        {
                            Code = "ERN",
                            IsDefault = false,
                            Name = "Eritrean nakfa",
                            Symbol = "Nfa"
                        },
                        new
                        {
                            Code = "ETB",
                            IsDefault = false,
                            Name = "Ethiopian birr",
                            Symbol = "Br"
                        },
                        new
                        {
                            Code = "EUR",
                            IsDefault = false,
                            Name = "European Euro",
                            Symbol = "€"
                        },
                        new
                        {
                            Code = "FJD",
                            IsDefault = false,
                            Name = "Fijian dollar",
                            Symbol = "FJ$"
                        },
                        new
                        {
                            Code = "FKP",
                            IsDefault = false,
                            Name = "Falkland Islands pound",
                            Symbol = "£"
                        },
                        new
                        {
                            Code = "GBP",
                            IsDefault = false,
                            Name = "British pound",
                            Symbol = "£"
                        },
                        new
                        {
                            Code = "GEL",
                            IsDefault = false,
                            Name = "Georgian lari",
                            Symbol = "GEL"
                        },
                        new
                        {
                            Code = "GHS",
                            IsDefault = false,
                            Name = "Ghanaian cedi",
                            Symbol = "GH₵"
                        },
                        new
                        {
                            Code = "GIP",
                            IsDefault = false,
                            Name = "Gibraltar pound",
                            Symbol = "£"
                        },
                        new
                        {
                            Code = "GMD",
                            IsDefault = false,
                            Name = "Gambian dalasi",
                            Symbol = "D"
                        },
                        new
                        {
                            Code = "GNF",
                            IsDefault = false,
                            Name = "Guinean franc",
                            Symbol = "FG"
                        },
                        new
                        {
                            Code = "GQE",
                            IsDefault = false,
                            Name = "Central African CFA franc",
                            Symbol = "CFA"
                        },
                        new
                        {
                            Code = "GTQ",
                            IsDefault = false,
                            Name = "Guatemalan quetzal",
                            Symbol = "Q"
                        },
                        new
                        {
                            Code = "GYD",
                            IsDefault = false,
                            Name = "Guyanese dollar",
                            Symbol = "GY$"
                        },
                        new
                        {
                            Code = "HKD",
                            IsDefault = false,
                            Name = "Hong Kong dollar",
                            Symbol = "HK$"
                        },
                        new
                        {
                            Code = "HNL",
                            IsDefault = false,
                            Name = "Honduran lempira",
                            Symbol = "L"
                        },
                        new
                        {
                            Code = "HRK",
                            IsDefault = false,
                            Name = "Croatian kuna",
                            Symbol = "kn"
                        },
                        new
                        {
                            Code = "HTG",
                            IsDefault = false,
                            Name = "Haitian gourde",
                            Symbol = "G"
                        },
                        new
                        {
                            Code = "HUF",
                            IsDefault = false,
                            Name = "Hungarian forint",
                            Symbol = "Ft"
                        },
                        new
                        {
                            Code = "IDR",
                            IsDefault = false,
                            Name = "Indonesian rupiah",
                            Symbol = "Rp"
                        },
                        new
                        {
                            Code = "ILS",
                            IsDefault = false,
                            Name = "Israeli new sheqel",
                            Symbol = "₪"
                        },
                        new
                        {
                            Code = "INR",
                            IsDefault = false,
                            Name = "Indian rupee",
                            Symbol = "₹"
                        },
                        new
                        {
                            Code = "IQD",
                            IsDefault = false,
                            Name = "Iraqi dinar",
                            Symbol = "د.ع"
                        },
                        new
                        {
                            Code = "IRR",
                            IsDefault = false,
                            Name = "Iranian rial",
                            Symbol = "IRR"
                        },
                        new
                        {
                            Code = "ISK",
                            IsDefault = false,
                            Name = "Icelandic króna",
                            Symbol = "kr"
                        },
                        new
                        {
                            Code = "JMD",
                            IsDefault = false,
                            Name = "Jamaican dollar",
                            Symbol = "J$"
                        },
                        new
                        {
                            Code = "JOD",
                            IsDefault = false,
                            Name = "Jordanian dinar",
                            Symbol = "JOD"
                        },
                        new
                        {
                            Code = "JPY",
                            IsDefault = false,
                            Name = "Japanese yen",
                            Symbol = "¥"
                        },
                        new
                        {
                            Code = "KES",
                            IsDefault = false,
                            Name = "Kenyan shilling",
                            Symbol = "KSh"
                        },
                        new
                        {
                            Code = "KGS",
                            IsDefault = false,
                            Name = "Kyrgyzstani som",
                            Symbol = "сом"
                        },
                        new
                        {
                            Code = "KHR",
                            IsDefault = false,
                            Name = "Cambodian riel",
                            Symbol = "៛"
                        },
                        new
                        {
                            Code = "KMF",
                            IsDefault = false,
                            Name = "Comorian franc",
                            Symbol = "KMF"
                        },
                        new
                        {
                            Code = "KPW",
                            IsDefault = false,
                            Name = "North Korean won",
                            Symbol = "W"
                        },
                        new
                        {
                            Code = "KRW",
                            IsDefault = false,
                            Name = "South Korean won",
                            Symbol = "W"
                        },
                        new
                        {
                            Code = "KWD",
                            IsDefault = false,
                            Name = "Kuwaiti dinar",
                            Symbol = "KWD"
                        },
                        new
                        {
                            Code = "KYD",
                            IsDefault = false,
                            Name = "Cayman Islands dollar",
                            Symbol = "KY$"
                        },
                        new
                        {
                            Code = "KZT",
                            IsDefault = false,
                            Name = "Kazakhstani tenge",
                            Symbol = "T"
                        },
                        new
                        {
                            Code = "LAK",
                            IsDefault = false,
                            Name = "Lao kip",
                            Symbol = "KN"
                        },
                        new
                        {
                            Code = "LBP",
                            IsDefault = false,
                            Name = "Lebanese lira",
                            Symbol = "£"
                        },
                        new
                        {
                            Code = "LKR",
                            IsDefault = false,
                            Name = "Sri Lankan rupee",
                            Symbol = "Rs"
                        },
                        new
                        {
                            Code = "LRD",
                            IsDefault = false,
                            Name = "Liberian dollar",
                            Symbol = "L$"
                        },
                        new
                        {
                            Code = "LSL",
                            IsDefault = false,
                            Name = "Lesotho loti",
                            Symbol = "M"
                        },
                        new
                        {
                            Code = "LTL",
                            IsDefault = false,
                            Name = "Lithuanian litas",
                            Symbol = "Lt"
                        },
                        new
                        {
                            Code = "LVL",
                            IsDefault = false,
                            Name = "Latvian lats",
                            Symbol = "Ls"
                        },
                        new
                        {
                            Code = "LYD",
                            IsDefault = false,
                            Name = "Libyan dinar",
                            Symbol = "LD"
                        },
                        new
                        {
                            Code = "MAD",
                            IsDefault = false,
                            Name = "Moroccan dirham",
                            Symbol = "MAD"
                        },
                        new
                        {
                            Code = "MDL",
                            IsDefault = false,
                            Name = "Moldovan leu",
                            Symbol = "MDL"
                        },
                        new
                        {
                            Code = "MGA",
                            IsDefault = false,
                            Name = "Malagasy ariary",
                            Symbol = "FMG"
                        },
                        new
                        {
                            Code = "MKD",
                            IsDefault = false,
                            Name = "Macedonian denar",
                            Symbol = "MKD"
                        },
                        new
                        {
                            Code = "MMK",
                            IsDefault = false,
                            Name = "Myanma kyat",
                            Symbol = "K"
                        },
                        new
                        {
                            Code = "MNT",
                            IsDefault = false,
                            Name = "Mongolian tugrik",
                            Symbol = "₮"
                        },
                        new
                        {
                            Code = "MOP",
                            IsDefault = false,
                            Name = "Macanese pataca",
                            Symbol = "P"
                        },
                        new
                        {
                            Code = "MRO",
                            IsDefault = false,
                            Name = "Mauritanian ouguiya",
                            Symbol = "UM"
                        },
                        new
                        {
                            Code = "MUR",
                            IsDefault = false,
                            Name = "Mauritian rupee",
                            Symbol = "Rs"
                        },
                        new
                        {
                            Code = "MVR",
                            IsDefault = false,
                            Name = "Maldivian rufiyaa",
                            Symbol = "Rf"
                        },
                        new
                        {
                            Code = "MWK",
                            IsDefault = false,
                            Name = "Malawian kwacha",
                            Symbol = "MK"
                        },
                        new
                        {
                            Code = "MXN",
                            IsDefault = false,
                            Name = "Mexican peso",
                            Symbol = "$"
                        },
                        new
                        {
                            Code = "MYR",
                            IsDefault = false,
                            Name = "Malaysian ringgit",
                            Symbol = "RM"
                        },
                        new
                        {
                            Code = "MZM",
                            IsDefault = false,
                            Name = "Mozambican metical",
                            Symbol = "MTn"
                        },
                        new
                        {
                            Code = "NAD",
                            IsDefault = false,
                            Name = "Namibian dollar",
                            Symbol = "N$"
                        },
                        new
                        {
                            Code = "NGN",
                            IsDefault = false,
                            Name = "Nigerian naira",
                            Symbol = "₦"
                        },
                        new
                        {
                            Code = "NIO",
                            IsDefault = false,
                            Name = "Nicaraguan córdoba",
                            Symbol = "C$"
                        },
                        new
                        {
                            Code = "NOK",
                            IsDefault = false,
                            Name = "Norwegian krone",
                            Symbol = "kr"
                        },
                        new
                        {
                            Code = "NPR",
                            IsDefault = false,
                            Name = "Nepalese rupee",
                            Symbol = "NRs"
                        },
                        new
                        {
                            Code = "NZD",
                            IsDefault = false,
                            Name = "New Zealand dollar",
                            Symbol = "NZ$"
                        },
                        new
                        {
                            Code = "OMR",
                            IsDefault = false,
                            Name = "Omani rial",
                            Symbol = "OMR"
                        },
                        new
                        {
                            Code = "PAB",
                            IsDefault = false,
                            Name = "Panamanian balboa",
                            Symbol = "B/."
                        },
                        new
                        {
                            Code = "PEN",
                            IsDefault = false,
                            Name = "Peruvian nuevo sol",
                            Symbol = "S/."
                        },
                        new
                        {
                            Code = "PGK",
                            IsDefault = false,
                            Name = "Papua New Guinean kina",
                            Symbol = "K"
                        },
                        new
                        {
                            Code = "PHP",
                            IsDefault = false,
                            Name = "Philippine peso",
                            Symbol = "₱"
                        },
                        new
                        {
                            Code = "PKR",
                            IsDefault = false,
                            Name = "Pakistani rupee",
                            Symbol = "Rs."
                        },
                        new
                        {
                            Code = "PLN",
                            IsDefault = false,
                            Name = "Polish zloty",
                            Symbol = "zł"
                        },
                        new
                        {
                            Code = "PYG",
                            IsDefault = false,
                            Name = "Paraguayan guarani",
                            Symbol = "₲"
                        },
                        new
                        {
                            Code = "QAR",
                            IsDefault = false,
                            Name = "Qatari riyal",
                            Symbol = "QR"
                        },
                        new
                        {
                            Code = "RON",
                            IsDefault = false,
                            Name = "Romanian leu",
                            Symbol = "L"
                        },
                        new
                        {
                            Code = "RSD",
                            IsDefault = false,
                            Name = "Serbian dinar",
                            Symbol = "din."
                        },
                        new
                        {
                            Code = "RUB",
                            IsDefault = false,
                            Name = "Russian ruble",
                            Symbol = "R"
                        },
                        new
                        {
                            Code = "SAR",
                            IsDefault = false,
                            Name = "Saudi riyal",
                            Symbol = "SR"
                        },
                        new
                        {
                            Code = "SBD",
                            IsDefault = false,
                            Name = "Solomon Islands dollar",
                            Symbol = "SI$"
                        },
                        new
                        {
                            Code = "SCR",
                            IsDefault = false,
                            Name = "Seychellois rupee",
                            Symbol = "SR"
                        },
                        new
                        {
                            Code = "SDG",
                            IsDefault = false,
                            Name = "Sudanese pound",
                            Symbol = "SDG"
                        },
                        new
                        {
                            Code = "SEK",
                            IsDefault = false,
                            Name = "Swedish krona",
                            Symbol = "kr"
                        },
                        new
                        {
                            Code = "SGD",
                            IsDefault = false,
                            Name = "Singapore dollar",
                            Symbol = "S$"
                        },
                        new
                        {
                            Code = "SHP",
                            IsDefault = false,
                            Name = "Saint Helena pound",
                            Symbol = "£"
                        },
                        new
                        {
                            Code = "SLL",
                            IsDefault = false,
                            Name = "Sierra Leonean leone",
                            Symbol = "Le"
                        },
                        new
                        {
                            Code = "SOS",
                            IsDefault = false,
                            Name = "Somali shilling",
                            Symbol = "Sh."
                        },
                        new
                        {
                            Code = "SRD",
                            IsDefault = false,
                            Name = "Surinamese dollar",
                            Symbol = "$"
                        },
                        new
                        {
                            Code = "SYP",
                            IsDefault = false,
                            Name = "Syrian pound",
                            Symbol = "LS"
                        },
                        new
                        {
                            Code = "SZL",
                            IsDefault = false,
                            Name = "Swazi lilangeni",
                            Symbol = "E"
                        },
                        new
                        {
                            Code = "THB",
                            IsDefault = false,
                            Name = "Thai baht",
                            Symbol = "฿"
                        },
                        new
                        {
                            Code = "TJS",
                            IsDefault = false,
                            Name = "Tajikistani somoni",
                            Symbol = "TJS"
                        },
                        new
                        {
                            Code = "TMT",
                            IsDefault = false,
                            Name = "Turkmen manat",
                            Symbol = "m"
                        },
                        new
                        {
                            Code = "TND",
                            IsDefault = false,
                            Name = "Tunisian dinar",
                            Symbol = "DT"
                        },
                        new
                        {
                            Code = "TRY",
                            IsDefault = false,
                            Name = "Turkish new lira",
                            Symbol = "TRY"
                        },
                        new
                        {
                            Code = "TTD",
                            IsDefault = false,
                            Name = "Trinidad and Tobago dollar",
                            Symbol = "TT$"
                        },
                        new
                        {
                            Code = "TWD",
                            IsDefault = false,
                            Name = "New Taiwan dollar",
                            Symbol = "NT$"
                        },
                        new
                        {
                            Code = "TZS",
                            IsDefault = false,
                            Name = "Tanzanian shilling",
                            Symbol = "TZS"
                        },
                        new
                        {
                            Code = "UAH",
                            IsDefault = false,
                            Name = "Ukrainian hryvnia",
                            Symbol = "UAH"
                        },
                        new
                        {
                            Code = "UGX",
                            IsDefault = false,
                            Name = "Ugandan shilling",
                            Symbol = "USh"
                        },
                        new
                        {
                            Code = "USD",
                            IsDefault = true,
                            Name = "United States dollar",
                            Symbol = "US$"
                        },
                        new
                        {
                            Code = "UYU",
                            IsDefault = false,
                            Name = "Uruguayan peso",
                            Symbol = "$U"
                        },
                        new
                        {
                            Code = "UZS",
                            IsDefault = false,
                            Name = "Uzbekistani som",
                            Symbol = "UZS"
                        },
                        new
                        {
                            Code = "VEB",
                            IsDefault = false,
                            Name = "Venezuelan bolivar",
                            Symbol = "Bs"
                        },
                        new
                        {
                            Code = "VND",
                            IsDefault = false,
                            Name = "Vietnamese dong",
                            Symbol = "₫"
                        },
                        new
                        {
                            Code = "VUV",
                            IsDefault = false,
                            Name = "Vanuatu vatu",
                            Symbol = "VT"
                        },
                        new
                        {
                            Code = "WST",
                            IsDefault = false,
                            Name = "Samoan tala",
                            Symbol = "WS$"
                        },
                        new
                        {
                            Code = "XAF",
                            IsDefault = false,
                            Name = "Central African CFA franc",
                            Symbol = "CFA"
                        },
                        new
                        {
                            Code = "XCD",
                            IsDefault = false,
                            Name = "East Caribbean dollar",
                            Symbol = "EC$"
                        },
                        new
                        {
                            Code = "XDR",
                            IsDefault = false,
                            Name = "Special Drawing Rights",
                            Symbol = "SDR"
                        },
                        new
                        {
                            Code = "XOF",
                            IsDefault = false,
                            Name = "West African CFA franc",
                            Symbol = "CFA"
                        },
                        new
                        {
                            Code = "XPF",
                            IsDefault = false,
                            Name = "CFP franc",
                            Symbol = "F"
                        },
                        new
                        {
                            Code = "YER",
                            IsDefault = false,
                            Name = "Yemeni rial",
                            Symbol = "YER"
                        },
                        new
                        {
                            Code = "ZAR",
                            IsDefault = false,
                            Name = "South African rand",
                            Symbol = "R"
                        },
                        new
                        {
                            Code = "ZMK",
                            IsDefault = false,
                            Name = "Zambian kwacha",
                            Symbol = "ZK"
                        },
                        new
                        {
                            Code = "ZWR",
                            IsDefault = false,
                            Name = "Zimbabwean dollar",
                            Symbol = "Z$"
                        });
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.CurrencyExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyFromCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CurrencyToCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyToCode");

                    b.HasIndex("CurrencyFromCode", "Time");

                    b.ToTable("CurrencyExchangeRates");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.DashboardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Item_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DashboardItems");

                    b.HasDiscriminator<string>("Item_Type").HasValue("DashboardItem");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Instrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Exchange")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyCode");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.InstrumentPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId", "Time");

                    b.ToTable("InstrumentPrices");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyCode");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasPrecision(19, 10)
                        .HasColumnType("decimal(19,10)");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PositionId", "Time");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.ChartLineInstrument", b =>
                {
                    b.HasBaseType("PortEval.Domain.Models.Entities.ChartLine");

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.HasIndex("InstrumentId");

                    b.HasDiscriminator().HasValue("Instrument");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.ChartLinePortfolio", b =>
                {
                    b.HasBaseType("PortEval.Domain.Models.Entities.ChartLine");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.HasIndex("PortfolioId");

                    b.HasDiscriminator().HasValue("Portfolio");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.ChartLinePosition", b =>
                {
                    b.HasBaseType("PortEval.Domain.Models.Entities.ChartLine");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasIndex("PositionId");

                    b.HasDiscriminator().HasValue("Position");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.DashboardChartItem", b =>
                {
                    b.HasBaseType("PortEval.Domain.Models.Entities.DashboardItem");

                    b.Property<int>("ChartId")
                        .HasColumnType("int");

                    b.HasIndex("ChartId");

                    b.HasDiscriminator().HasValue("Chart");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Chart", b =>
                {
                    b.OwnsOne("PortEval.Domain.Models.ValueObjects.ChartDateRange", "DateRange", b1 =>
                        {
                            b1.Property<int>("ChartId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime?>("End")
                                .HasColumnType("datetime2")
                                .HasColumnName("DateRangeEnd");

                            b1.Property<bool>("IsToDate")
                                .HasColumnType("bit")
                                .HasColumnName("IsToDate");

                            b1.Property<DateTime?>("Start")
                                .HasColumnType("datetime2")
                                .HasColumnName("DateRangeStart");

                            b1.Property<int?>("ToDateRange")
                                .HasColumnType("int")
                                .HasColumnName("ToDateRange");

                            b1.HasKey("ChartId");

                            b1.ToTable("Charts");

                            b1.WithOwner()
                                .HasForeignKey("ChartId");
                        });

                    b.OwnsOne("PortEval.Domain.Models.ValueObjects.ChartTypeSettings", "TypeConfiguration", b1 =>
                        {
                            b1.Property<int>("ChartId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("CurrencyCode")
                                .HasColumnType("nvarchar(3)")
                                .HasColumnName("CurrencyCode");

                            b1.Property<int?>("Frequency")
                                .HasColumnType("int")
                                .HasColumnName("Frequency");

                            b1.Property<int>("Type")
                                .HasColumnType("int")
                                .HasColumnName("Type");

                            b1.HasKey("ChartId");

                            b1.HasIndex("CurrencyCode");

                            b1.ToTable("Charts");

                            b1.WithOwner()
                                .HasForeignKey("ChartId");

                            b1.HasOne("PortEval.Domain.Models.Entities.Currency", null)
                                .WithMany()
                                .HasForeignKey("CurrencyCode");
                        });

                    b.Navigation("DateRange");

                    b.Navigation("TypeConfiguration");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.ChartLine", b =>
                {
                    b.HasOne("PortEval.Domain.Models.Entities.Chart", "Chart")
                        .WithMany("Lines")
                        .HasForeignKey("ChartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chart");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Currency", b =>
                {
                    b.OwnsOne("PortEval.Domain.Models.ValueObjects.TrackingInformation", "TrackingInfo", b1 =>
                        {
                            b1.Property<string>("CurrencyCode")
                                .HasColumnType("nvarchar(3)");

                            b1.Property<DateTime>("StartTime")
                                .HasColumnType("datetime2");

                            b1.HasKey("CurrencyCode");

                            b1.ToTable("Currencies");

                            b1.WithOwner()
                                .HasForeignKey("CurrencyCode");
                        });

                    b.Navigation("TrackingInfo");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.CurrencyExchangeRate", b =>
                {
                    b.HasOne("PortEval.Domain.Models.Entities.Currency", "CurrencyFrom")
                        .WithMany("ExchangeRates")
                        .HasForeignKey("CurrencyFromCode")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PortEval.Domain.Models.Entities.Currency", "CurrencyTo")
                        .WithMany()
                        .HasForeignKey("CurrencyToCode");

                    b.Navigation("CurrencyFrom");

                    b.Navigation("CurrencyTo");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.DashboardItem", b =>
                {
                    b.OwnsOne("PortEval.Domain.Models.ValueObjects.DashboardPosition", "Position", b1 =>
                        {
                            b1.Property<int>("DashboardItemId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Height")
                                .HasColumnType("int")
                                .HasColumnName("DashboardHeight");

                            b1.Property<int>("Width")
                                .HasColumnType("int")
                                .HasColumnName("DashboardWidth");

                            b1.Property<int>("X")
                                .HasColumnType("int")
                                .HasColumnName("DashboardPositionX");

                            b1.Property<int>("Y")
                                .HasColumnType("int")
                                .HasColumnName("DashboardPositionY");

                            b1.HasKey("DashboardItemId");

                            b1.ToTable("DashboardItems");

                            b1.WithOwner()
                                .HasForeignKey("DashboardItemId");
                        });

                    b.Navigation("Position");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Instrument", b =>
                {
                    b.HasOne("PortEval.Domain.Models.Entities.Currency", null)
                        .WithMany()
                        .HasForeignKey("CurrencyCode");

                    b.OwnsOne("PortEval.Domain.Models.ValueObjects.TrackingInformation", "TrackingInfo", b1 =>
                        {
                            b1.Property<int>("InstrumentId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("StartTime")
                                .HasColumnType("datetime2");

                            b1.HasKey("InstrumentId");

                            b1.ToTable("Instruments");

                            b1.WithOwner()
                                .HasForeignKey("InstrumentId");
                        });

                    b.Navigation("TrackingInfo");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.InstrumentPrice", b =>
                {
                    b.HasOne("PortEval.Domain.Models.Entities.Instrument", "Instrument")
                        .WithMany("Prices")
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instrument");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Portfolio", b =>
                {
                    b.HasOne("PortEval.Domain.Models.Entities.Currency", null)
                        .WithMany()
                        .HasForeignKey("CurrencyCode");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Position", b =>
                {
                    b.HasOne("PortEval.Domain.Models.Entities.Instrument", null)
                        .WithMany()
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortEval.Domain.Models.Entities.Portfolio", null)
                        .WithMany()
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Transaction", b =>
                {
                    b.HasOne("PortEval.Domain.Models.Entities.Position", "Position")
                        .WithMany("Transactions")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.ChartLineInstrument", b =>
                {
                    b.HasOne("PortEval.Domain.Models.Entities.Instrument", null)
                        .WithMany()
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.ChartLinePortfolio", b =>
                {
                    b.HasOne("PortEval.Domain.Models.Entities.Portfolio", null)
                        .WithMany()
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.ChartLinePosition", b =>
                {
                    b.HasOne("PortEval.Domain.Models.Entities.Position", null)
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.DashboardChartItem", b =>
                {
                    b.HasOne("PortEval.Domain.Models.Entities.Chart", null)
                        .WithMany()
                        .HasForeignKey("ChartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Chart", b =>
                {
                    b.Navigation("Lines");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Currency", b =>
                {
                    b.Navigation("ExchangeRates");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Instrument", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("PortEval.Domain.Models.Entities.Position", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
